package main

import (
	"strings"

	"github.com/ddkwork/golibrary/stream"
)

// Code generated by EnumTypesGen - DO NOT EDIT.

type BodyType uint8

const (
	HttpDumpType BodyType = iota
	HexDumpType
	SteamType
	WebsocketType
	ProtoBufType
	TdfType
	TafType
	AccType
	NotesType
	MsgpackType
	UnitTestType
	GitProxyType
)

func (t BodyType) Valid() bool {
	return t >= HttpDumpType && t <= GitProxyType
}

func BodyTypeBy[T stream.Integer](v T) BodyType {
	return BodyType(v)
}

func (t BodyType) AssertBy(name string) BodyType {
	name = strings.TrimSuffix(name, "Type")
	for _, n := range t.EnumTypes() {
		if strings.EqualFold(name, n.String()) {
			return n
		}
	}
	panic("InvalidType")
}

func (t BodyType) String() string {
	switch t {
	case HttpDumpType:
		return "HttpDump"
	case HexDumpType:
		return "HexDump"
	case SteamType:
		return "Steam"
	case WebsocketType:
		return "Websocket"
	case ProtoBufType:
		return "ProtoBuf"
	case TdfType:
		return "Tdf"
	case TafType:
		return "Taf"
	case AccType:
		return "Acc"
	case NotesType:
		return "Notes"
	case MsgpackType:
		return "Msgpack"
	case UnitTestType:
		return "UnitTest"
	case GitProxyType:
		return "GitProxy"
	default:
		panic("InvalidType")
	}
}

func (t BodyType) Tooltip() string {
	switch t {
	case HttpDumpType:
		return "HttpDump"
	case HexDumpType:
		return "hexDump"
	case SteamType:
		return "Steam"
	case WebsocketType:
		return "Websocket"
	case ProtoBufType:
		return "ProtoBuf"
	case TdfType:
		return "Tdf"
	case TafType:
		return "Taf"
	case AccType:
		return "Acc"
	case NotesType:
		return "Notes"
	case MsgpackType:
		return "Msgpack"
	case UnitTestType:
		return "UnitTest"
	case GitProxyType:
		return "GitProxy"
	default:
		panic("InvalidType")
	}
}

func (t BodyType) Names() []string {
	return []string{
		"HttpDump",
		"HexDump",
		"Steam",
		"Websocket",
		"ProtoBuf",
		"Tdf",
		"Taf",
		"Acc",
		"Notes",
		"Msgpack",
		"UnitTest",
		"GitProxy",
	}
}

func (t BodyType) EnumTypes() []BodyType {
	return []BodyType{
		HttpDumpType,
		HexDumpType,
		SteamType,
		WebsocketType,
		ProtoBufType,
		TdfType,
		TafType,
		AccType,
		NotesType,
		MsgpackType,
		UnitTestType,
		GitProxyType,
	}
}

func (t BodyType) SvgFileName() string {
	return t.String() + ".svg"
}
